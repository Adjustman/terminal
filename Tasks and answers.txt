1) Посмотреть где я  
	pwd (Present Working Directory) - показывает текущее местоположение 

2) Создать папку - mkdir (Make Directory) 

	mkdir Folder
	mkdir "Second folder" - 

3) Зайти в папку - cd (Change Directory) - cd [Название папки]

	cd Folder

4) Создать 3 папки - mkdir Folder1 Folder2 "Folder 3"

5) Зайти в любоую папку - cd Folder1 (перешли в папку Folder1) cd .. - перейти на один уровень назад 

6) Создать 5 файлов (3 txt, 2 json) - touch 1.txt second.txt "1 plus 2.txt"
	touch js1.json js2.json
	touch folder2/file_created_in_folder.html - создать файл внутри папки

7) Создать 3 папки - mkdir first_dir second_folder others

8) Вывести список содержимого папки - ls (List(Список)) - ls-[параметр], "ls -la" - отображает список файлов и папок в текущей директории, включая скрытые

9) + Открыть любой txt файл  
	А) cat 1.txt 
	B) vim 1.txt

10) + написать туда что-нибудь, любой текст
	A) cat > 1.txt, производим изменения в файле, для сохранения и выхода нажимаем Enter и Ctrl+C
	   cat >> 1.txt, ДОПИСЫВАЕТ в конец документа. Производим изменения в файле, для сохранения и выхода нажимаем Enter и Ctrl+C 	 
	B) vim 1.txt и нажать латинскую клавишу "I". После редактирования нажать ESC + :wq

11) + сохранить и выйти 
	A) cat > 1.txt, после редактирования нажать комбинацию Ctrl+C
           cat >> 1.txt - Дописать в конец файла, Ctrl+C - сохранить и выйти
	B) vim 1.txt и нажать латинскую клавишу "I". После редактирования нажать ESC + :wq
12) Выйти из папки на уровень выше - cd ..

13) переместить любые 2 файла, которые вы создали, в любую другую папку - mv (Move - Переместить)
	mv folder1/name.txt 2/name.txt
	mv folder1/second_folder/777.txt folder1/777.txt
	
	
14) скопировать любые 2 файла, которые вы создали, в любую другую папку - cp (Copy - Копировать)
	cp 1.txt others/1.txt
	cp 3.txt first_dir/3.txt
	
15) Найти файл по имени 
	find -name 1.txt
		
16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.
	A) Grep — это команда для поиска внутри текстовых файлов. Пример: 
	grep -rn --include="*.txt" "test" .
	-r — рекурсивный поиск в каталогах;
	-n — выводить номера строк, на которых было найдено вхождение;
	--include=”*.txt” — искать только в файлах с расширением txt. Если этот параметр убрать — поиск будет осуществляться 	по 		всем файлам указанной директории;
	"test" — вхождение, которое мы ищем;
	. — где мы ищем. В нашем случае внутри текущей директории и вниз.
	
	B) Для просмотра содержимого файла в реальном времени (это особенно актуально при просмотре логов) в терминале лучше 			использовать команду "tail"
	tail 1.txt - для просмотра последних 10 строк файла 1.txt
	tail -20 1.txt - для просмотра указанного числа строк с конца файла (20 строк)
	tail -f 1.txt - для отслеживания изменений файла. Будут показаны последние 10 строк файла 1.txt 
	Команда tail будет продолжать показывать новые строки по мере их добавления к файлу 1.txt. Для окончания просмотра нажать 		клавиши Ctrl-C.
	
17) вывести несколько первых строк из текстового файла
	head -n* filename
	-n* - параметр, указывающий количество выводимых строк. Если параметр не будет указан - то по умолчанию выводятся первые 10 		строк
	head -n9 1.txt - будет выведено первые 9 строк из файла 1.txt

18) вывести несколько последних строк из текстового файла
	tail -12 1.txt - будет выведено последние 12 строк из файла 1.txt

19) просмотреть содержимое длинного файла (команда less) изучите как она работает.

	Команда less — позволяет перематывать текст не только вперёд, но и назад, осуществлять поиск в обоих направлениях, 			переходить сразу в конец или в начало файла. Особенность less заключается в том, что команда не считывает текст полностью, а 		загружает его небольшими фрагментами.
	Перечень всех опций и внутренних команд можно просмотреть в терминале, выполнив команду "man less"

	Список основных ходовых опций:

	-s, --squeeze-blank-lines — заменить множество идущих подряд пустых строк одной пустой строкой;
	h, H — справка;
	Space, Ctrl+V, f, Ctrl+F — прокрутить текст на один экран вперёд;
	Enter, Return, Ctrl+N, e, Ctrl+E, j, Ctrl+J — прокрутить текст на n строк вперед, по умолчанию n=1;
	y, Ctrl+Y, Ctrl+P, k, Ctrl+K — прокрутить текст на n строк назад, по умолчанию n=1;
	Ctrl+→ — прокрутить текст по горизонтали в конец строки;
	Ctrl+← — прокрутить текст по горизонтали в начало строки;
	:d — удалить текущий файл из списка файлов;
	Ctrl+G, :f — вывести основную информацию о файле;
	q, Q, :q, :Q, ZZ — выход.

	Пример:  less -s textfile.txt

20) вывести дату и время
	date
=========

Задание *
1) Отправить http запрос на сервер.
http://162.55.220.72:5005/terminal-hw-request

	Запрос в терминале: curl http://162.55.220.72:5006/terminal-hw-request

	Ответ от сервера:
{
  "Intro": "Hello!! This is your the first response from server", 
  "Tasks": {
    "Task_1": "Send the next URL in terminal: http://162.55.220.72:5005/get_method?name=(set_your_String)&age=(set_your_number)", 
    "result": [
      "Your_String", 
      "Your_number"
    ]
  }
}
	
	На сервере нас ждало второе задание)

	Второй запрос:	http://162.55.220.72:5005/get_method?'name=Diman&age=36'

	Второй ответ:		

[
	"Diman",
	"36"
]


	

2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

	Вариант № 1

	Создаем файлc с расширением ".sh" с помощю vim, включаем функцию редактирования клавишей "I", набираем текст скрипта. Для 	сохранения нажимаем ESC + :wq
	
	Текст скрипта:

	#!bin/bash
	cd /d/_Work/QA_Course/HomeWork/01_Linux_terminal_gitbash_commands/scripts
	echo "We are in: "
	pwd
	echo "Creating 3 folders: 1 Second "Third dir" "
	mkdir 1 Second "Third dir"
	echo "Go to folder "Second" "
	cd Second
	echo "Creating 3 'txt' files and 2 'json' "		
	touch 1.txt second.txt "1 plus 2.txt" first.json responce.json
	echo "Creating 3 folders"
	mkdir first_dir "folder created by the script" others
	echo "Go to folder "folder created by the script" "
	cd "folder created by the script"
	echo "See what's inside the folder, including hidden and system files"
	ls -la

	Такмже можно объединять несколько команд в цепочку с помощью операторов объединения команд "& | ; && ! || &&-|| \ ()"
	